üß© Estructura Base del Sistema
üìö 1. Base de Datos
CREATE DATABASE sistema_gestion_academica;
USE sistema_gestion_academica;

üë§ 2. Tabla: Usuarios

Contiene informaci√≥n de administradores, profesores y estudiantes.

Campo	Tipo	Descripci√≥n
id	INT (PK)	Identificador √∫nico
ingresoUsuario	VARCHAR(50) UNIQUE	Usuario para login
ingresoContrasenia	VARCHAR(100)	Contrase√±a
rol	ENUM	admin, profesor, estudiante
nombre	VARCHAR(100)	Nombre completo
email	VARCHAR(100) UNIQUE	Correo electr√≥nico
telefono	VARCHAR(15)	Tel√©fono
fecha_nacimiento	DATE	Fecha de nacimiento
fecha_registro	TIMESTAMP	Fecha de registro autom√°tico
activo	BOOLEAN	Activo o inactivo
üìò 3. Tabla: Cursos

Informaci√≥n sobre los cursos dictados.

Campo	Tipo	Descripci√≥n
id	INT (PK)	ID del curso
nombre_curso	VARCHAR(100)	Nombre del curso
nivel	ENUM	A1, A2, B1, B2, C1, C2
descripcion	TEXT	Descripci√≥n del curso
profesor_id	INT (FK)	Referencia a Usuarios(id) (profesor)
max_estudiantes	INT	M√°ximo n√∫mero de estudiantes (default: 20)
fecha_inicio	DATE	Fecha de inicio
fecha_fin	DATE	Fecha de fin
activo	BOOLEAN	Activo o no
üìù 4. Tabla: Calificaciones

Guarda las evaluaciones por habilidad y tipo.

Campo	Tipo	Descripci√≥n
id	INT (PK)	ID de la calificaci√≥n
estudiante_id	INT (FK)	Usuario estudiante
curso_id	INT (FK)	Curso evaluado
habilidad	ENUM	Ej: speaking, writing, reading, etc.
puntaje	DECIMAL(4,2)	Puntaje del 0 al 20
fecha_evaluacion	DATE	Fecha de evaluaci√≥n
comentario	TEXT	Comentario de retroalimentaci√≥n
tipo_evaluacion	ENUM	Examen, tarea, proyecto, participaci√≥n
periodo	ENUM	Q1, Q2, Q3, Q4 (trimestres)

üîê Restricciones:

Un estudiante no puede tener dos evaluaciones del mismo tipo en el mismo d√≠a, curso y habilidad (restricci√≥n UNIQUE).

üìÑ 5. Tabla: Inscripciones

Relaci√≥n muchos a muchos entre estudiantes y cursos.

Campo	Tipo	Descripci√≥n
id	INT (PK)	ID de inscripci√≥n
estudiante_id	INT (FK)	ID del usuario estudiante
curso_id	INT (FK)	ID del curso
estado	ENUM	activo, completado, cancelado

üîê Restricci√≥n UNIQUE: Un estudiante solo puede inscribirse una vez por curso.

üß™ 6. Consultas √ötiles

Aqu√≠ algunos reportes clave incluidos:

Usuarios por rol:

SELECT rol, COUNT(*) FROM Usuarios GROUP BY rol;


Cursos con su profesor:

SELECT c.nombre_curso, u.nombre AS profesor
FROM Cursos c JOIN Usuarios u ON c.profesor_id = u.id;


Total de estudiantes por curso:

SELECT c.nombre_curso, COUNT(i.estudiante_id)
FROM Cursos c
LEFT JOIN Inscripciones i ON c.id = i.curso_id
GROUP BY c.nombre_curso;


Promedio por estudiante en cada curso:

SELECT u.nombre AS estudiante, c.nombre_curso, AVG(cal.puntaje) AS promedio
FROM Calificaciones cal
JOIN Usuarios u ON cal.estudiante_id = u.id
JOIN Cursos c ON cal.curso_id = c.id
GROUP BY u.nombre, c.nombre_curso
ORDER BY promedio DESC;

üõ†Ô∏è 7. Gesti√≥n de Usuario MySQL (admin)

Verificaci√≥n, creaci√≥n y asignaci√≥n de permisos para el usuario admin en MySQL:

CREATE USER IF NOT EXISTS 'admin'@'localhost' IDENTIFIED BY 'admin';
GRANT ALL PRIVILEGES ON sistema_gestion_academica.* TO 'admin'@'localhost';
FLUSH PRIVILEGES;

üß™ Datos de Ejemplo Insertados
üî∏ Usuarios:

2 administradores

3 profesores

6 estudiantes

üî∏ Cursos:

5 cursos de ingl√©s de distintos niveles

üî∏ Inscripciones:

M√∫ltiples estudiantes por curso (relaci√≥n m:m)

üî∏ Calificaciones:

Evaluaciones por habilidad, tipo y trimestre